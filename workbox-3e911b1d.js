define(["exports"],function(y){"use strict";try{self["workbox:core:7.0.0"]&&_()}catch{}const j=(r,...e)=>{let t=r;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t};class l extends Error{constructor(e,t){super(j(e,t)),this.name=e,this.details=t}}try{self["workbox:routing:7.0.0"]&&_()}catch{}const q=r=>r&&typeof r=="object"?r:{handle:r};class m{constructor(e,t,s="GET"){this.handler=q(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=q(e)}}class M extends m{constructor(e,t,s){super(({url:n})=>{const a=e.exec(n.href);if(a&&(n.origin===location.origin||a.index===0))return a.slice(1)},t,s)}}class F{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(n=>{typeof n=="string"&&(n=[n]);const a=new Request(...n);return this.handleRequest({request:a,event:e})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:a,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s});let c=i&&i.handler;const h=e.method;if(!c&&this.i.has(h)&&(c=this.i.get(h)),!c)return;let u;try{u=c.handle({url:s,request:e,event:t,params:a})}catch(f){u=Promise.reject(f)}const p=i&&i.catchHandler;return u instanceof Promise&&(this.o||p)&&(u=u.catch(async f=>{if(p)try{return await p.handle({url:s,request:e,event:t,params:a})}catch(w){w instanceof Error&&(f=w)}if(this.o)return this.o.handle({url:s,request:e,event:t});throw f})),u}findMatchingRoute({url:e,sameOrigin:t,request:s,event:n}){const a=this.t.get(s.method)||[];for(const i of a){let c;const h=i.match({url:e,sameOrigin:t,request:s,event:n});if(h)return c=h,(Array.isArray(c)&&c.length===0||h.constructor===Object&&Object.keys(h).length===0||typeof h=="boolean")&&(c=void 0),{route:i,params:c}}return{}}setDefaultHandler(e,t="GET"){this.i.set(t,q(e))}setCatchHandler(e){this.o=q(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new l("unregister-route-but-not-found-with-method",{method:e.method});const t=this.t.get(e.method).indexOf(e);if(!(t>-1))throw new l("unregister-route-route-not-registered");this.t.get(e.method).splice(t,1)}}let R;const S=()=>(R||(R=new F,R.addFetchListener(),R.addCacheListener()),R);function O(r,e,t){let s;if(typeof r=="string"){const n=new URL(r,location.href);s=new m(({url:a})=>a.href===n.href,e,t)}else if(r instanceof RegExp)s=new M(r,e,t);else if(typeof r=="function")s=new m(r,e,t);else{if(!(r instanceof m))throw new l("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});s=r}return S().registerRoute(s),s}const C={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},P=r=>[C.prefix,r,C.suffix].filter(e=>e&&e.length>0).join("-"),k=r=>r||P(C.precache),A=r=>r||P(C.runtime);function N(r,e){const t=e();return r.waitUntil(t),t}try{self["workbox:precaching:7.0.0"]&&_()}catch{}function H(r){if(!r)throw new l("add-to-cache-list-unexpected-type",{entry:r});if(typeof r=="string"){const a=new URL(r,location.href);return{cacheKey:a.href,url:a.href}}const{revision:e,url:t}=r;if(!t)throw new l("add-to-cache-list-unexpected-type",{entry:r});if(!e){const a=new URL(t,location.href);return{cacheKey:a.href,url:a.href}}const s=new URL(t,location.href),n=new URL(t,location.href);return s.searchParams.set("__WB_REVISION__",e),{cacheKey:s.href,url:n.href}}class B{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const n=t.originalRequest.url;s?this.notUpdatedURLs.push(n):this.updatedURLs.push(n)}return s}}}class D{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:s})=>{const n=s?.cacheKey||this.h.getCacheKeyForURL(t.url);return n?new Request(n,{headers:t.headers}):t},this.h=e}}let v;async function I(r,e){let t=null;if(r.url&&(t=new URL(r.url).origin),t!==self.location.origin)throw new l("cross-origin-copy-response",{origin:t});const s=r.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},a=e?e(n):n,i=function(){if(v===void 0){const c=new Response("");if("body"in c)try{new Response(c.body),v=!0}catch{v=!1}v=!1}return v}()?s.body:await s.blob();return new Response(i,a)}function E(r,e){const t=new URL(r);for(const s of e)t.searchParams.delete(s);return t.href}class ${constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const G=new Set;try{self["workbox:strategies:7.0.0"]&&_()}catch{}function L(r){return typeof r=="string"?new Request(r):r}class V{constructor(e,t){this.u={},Object.assign(this,t),this.event=t.event,this.l=e,this.p=new $,this.R=[],this.m=[...e.plugins],this.v=new Map;for(const s of this.m)this.v.set(s,{});this.event.waitUntil(this.p.promise)}async fetch(e){const{event:t}=this;let s=L(e);if(s.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const i=await t.preloadResponse;if(i)return i}const n=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const i of this.iterateCallbacks("requestWillFetch"))s=await i({request:s.clone(),event:t})}catch(i){if(i instanceof Error)throw new l("plugin-error-request-will-fetch",{thrownErrorMessage:i.message})}const a=s.clone();try{let i;i=await fetch(s,s.mode==="navigate"?void 0:this.l.fetchOptions);for(const c of this.iterateCallbacks("fetchDidSucceed"))i=await c({event:t,request:a,response:i});return i}catch(i){throw n&&await this.runCallbacks("fetchDidFail",{error:i,event:t,originalRequest:n.clone(),request:a.clone()}),i}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=L(e);let s;const{cacheName:n,matchOptions:a}=this.l,i=await this.getCacheKey(t,"read"),c=Object.assign(Object.assign({},a),{cacheName:n});s=await caches.match(i,c);for(const h of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await h({cacheName:n,matchOptions:a,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,t){const s=L(e);var n;await(n=0,new Promise(o=>setTimeout(o,n)));const a=await this.getCacheKey(s,"write");if(!t)throw new l("cache-put-with-no-response",{url:(i=a.url,new URL(String(i),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var i;const c=await this.q(t);if(!c)return!1;const{cacheName:h,matchOptions:u}=this.l,p=await self.caches.open(h),f=this.hasCallback("cacheDidUpdate"),w=f?await async function(o,d,b,U){const T=E(d.url,b);if(d.url===T)return o.match(d,U);const X=Object.assign(Object.assign({},U),{ignoreSearch:!0}),Y=await o.keys(d,X);for(const W of Y)if(T===E(W.url,b))return o.match(W,U)}(p,a.clone(),["__WB_REVISION__"],u):null;try{await p.put(a,f?c.clone():c)}catch(o){if(o instanceof Error)throw o.name==="QuotaExceededError"&&await async function(){for(const d of G)await d()}(),o}for(const o of this.iterateCallbacks("cacheDidUpdate"))await o({cacheName:h,oldResponse:w,newResponse:c.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this.u[s]){let n=e;for(const a of this.iterateCallbacks("cacheKeyWillBeUsed"))n=L(await a({mode:t,request:n,event:this.event,params:this.params}));this.u[s]=n}return this.u[s]}hasCallback(e){for(const t of this.l.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this.l.plugins)if(typeof t[e]=="function"){const s=this.v.get(t);yield a=>{const i=Object.assign(Object.assign({},a),{state:s});return t[e](i)}}}waitUntil(e){return this.R.push(e),e}async doneWaiting(){let e;for(;e=this.R.shift();)await e}destroy(){this.p.resolve(null)}async q(e){let t=e,s=!1;for(const n of this.iterateCallbacks("cacheWillUpdate"))if(t=await n({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&t.status!==200&&(t=void 0),t}}class J{constructor(e={}){this.cacheName=A(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s=typeof e.request=="string"?new Request(e.request):e.request,n="params"in e?e.params:void 0,a=new V(this,{event:t,request:s,params:n}),i=this.U(a,s,t);return[i,this.L(i,a,s,t)]}async U(e,t,s){let n;await e.runCallbacks("handlerWillStart",{event:s,request:t});try{if(n=await this._(t,e),!n||n.type==="error")throw new l("no-response",{url:t.url})}catch(a){if(a instanceof Error){for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:a,event:s,request:t}),n)break}if(!n)throw a}for(const a of e.iterateCallbacks("handlerWillRespond"))n=await a({event:s,request:t,response:n});return n}async L(e,t,s,n){let a,i;try{a=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:a}),await t.doneWaiting()}catch(c){c instanceof Error&&(i=c)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:a,error:i}),t.destroy(),i)throw i}}class g extends J{constructor(e={}){e.cacheName=k(e.cacheName),super(e),this.C=e.fallbackToNetwork!==!1,this.plugins.push(g.copyRedirectedCacheableResponsesPlugin)}async _(e,t){return await t.cacheMatch(e)||(t.event&&t.event.type==="install"?await this.O(e,t):await this.N(e,t))}async N(e,t){let s;const n=t.params||{};if(!this.C)throw new l("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{const a=n.integrity,i=e.integrity,c=!i||i===a;s=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?i||a:void 0})),a&&c&&e.mode!=="no-cors"&&(this.k(),await t.cachePut(e,s.clone()))}return s}async O(e,t){this.k();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new l("bad-precaching-response",{url:e.url,status:s.status});return s}k(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==g.copyRedirectedCacheableResponsesPlugin&&(n===g.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);t===0?this.plugins.push(g.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}g.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:r})=>!r||r.status>=400?null:r},g.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:r})=>r.redirected?await I(r):r};class Q{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this.K=new Map,this.P=new Map,this.T=new Map,this.l=new g({cacheName:k(e),plugins:[...t,new D({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this.l}precache(e){this.addToCacheList(e),this.W||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this.W=!0)}addToCacheList(e){const t=[];for(const s of e){typeof s=="string"?t.push(s):s&&s.revision===void 0&&t.push(s.url);const{cacheKey:n,url:a}=H(s),i=typeof s!="string"&&s.revision?"reload":"default";if(this.K.has(a)&&this.K.get(a)!==n)throw new l("add-to-cache-list-conflicting-entries",{firstEntry:this.K.get(a),secondEntry:n});if(typeof s!="string"&&s.integrity){if(this.T.has(n)&&this.T.get(n)!==s.integrity)throw new l("add-to-cache-list-conflicting-integrities",{url:a});this.T.set(n,s.integrity)}if(this.K.set(a,n),this.P.set(a,i),t.length>0){const c=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(c)}}}install(e){return N(e,async()=>{const t=new B;this.strategy.plugins.push(t);for(const[a,i]of this.K){const c=this.T.get(i),h=this.P.get(a),u=new Request(a,{integrity:c,cache:h,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:i},request:u,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}})}activate(e){return N(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),s=await t.keys(),n=new Set(this.K.values()),a=[];for(const i of s)n.has(i.url)||(await t.delete(i),a.push(i.url));return{deletedURLs:a}})}getURLsToCacheKeys(){return this.K}getCachedURLs(){return[...this.K.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.K.get(t.href)}getIntegrityForCacheKey(e){return this.T.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new l("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let K;const x=()=>(K||(K=new Q),K);class z extends m{constructor(e,t){super(({request:s})=>{const n=e.getURLsToCacheKeys();for(const a of function*(i,{ignoreURLParametersMatching:c=[/^utm_/,/^fbclid$/],directoryIndex:h="index.html",cleanURLs:u=!0,urlManipulation:p}={}){const f=new URL(i,location.href);f.hash="",yield f.href;const w=function(o,d=[]){for(const b of[...o.searchParams.keys()])d.some(U=>U.test(b))&&o.searchParams.delete(b);return o}(f,c);if(yield w.href,h&&w.pathname.endsWith("/")){const o=new URL(w.href);o.pathname+=h,yield o.href}if(u){const o=new URL(w.href);o.pathname+=".html",yield o.href}if(p){const o=p({url:f});for(const d of o)yield d.href}}(s.url,t)){const i=n.get(a);if(i)return{cacheKey:i,integrity:e.getIntegrityForCacheKey(i)}}},e.strategy)}}y.NavigationRoute=class extends m{constructor(r,{allowlist:e=[/./],denylist:t=[]}={}){super(s=>this.j(s),r),this.M=e,this.S=t}j({url:r,request:e}){if(e&&e.mode!=="navigate")return!1;const t=r.pathname+r.search;for(const s of this.S)if(s.test(t))return!1;return!!this.M.some(s=>s.test(t))}},y.cleanupOutdatedCaches=function(){self.addEventListener("activate",r=>{const e=k();r.waitUntil((async(t,s="-precache-")=>{const n=(await self.caches.keys()).filter(a=>a.includes(s)&&a.includes(self.registration.scope)&&a!==t);return await Promise.all(n.map(a=>self.caches.delete(a))),n})(e).then(t=>{}))})},y.clientsClaim=function(){self.addEventListener("activate",()=>self.clients.claim())},y.createHandlerBoundToURL=function(r){return x().createHandlerBoundToURL(r)},y.precacheAndRoute=function(r,e){(function(t){x().precache(t)})(r),function(t){const s=x();O(new z(s,t))}(e)},y.registerRoute=O});
